#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[probe]
##    Euclid Probe
pin: ^ebb36:PB3           #^PA3                    ; use pin PA0 and enable internal pullup resistor as this is an NC switch  use ! to invert if needed
x_offset: 0.0                ; probe is offset 2.0mm from nozzle
y_offset: 0.0               ; probe is +25mm from nozzle in Y direction
z_offset: -0.601           ; trigger point is 9.5mm below nozzle. larger numbers move effective Z0 CLOSER to the nozzle
speed: 3                   ; probing speed of 5mm/second ideal is <10mm/sec  
lift_speed: 20               ; probe lift speed
samples: 2                   ; number of probes to perform per sample
samples_result: median      ; normalization method: see config reference
sample_retract_dist: 0.8
samples_tolerance: 0.006 #0.0075
samples_tolerance_retries: 3
# example homing overide to use Euclid as an endstop and Z-probe
# example assumes that the bed is 300x300
# assumes homing Z at center of bed
# assumes that macro for probe deploy and retract below are called M401 and M402

[bed_mesh]
speed: 600
horizontal_move_z: 3
mesh_min: 5, 5
mesh_max: 115, 115
probe_count: 5, 5
#relative_reference_index: 24
algorithm: bicubic


[homing_override]
axes: xyz
set_position_z: 0
gcode:
   SET_PIN PIN=chamber_leds VALUE=1
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}



## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right
Probe_height: 0.1

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.65 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.65 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}



[gcode_macro _HOME_Z]
gcode:
    G90
    G1 X60 Y115 F18000
    G28 Z
    G1 Z40
    G1 X60 Y90 F18000